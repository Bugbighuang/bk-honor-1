# Generated by Django 3.2.12 on 2022-07-28 15:16

import uuid

import django.db.models.deletion
import django.db.models.manager
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicants', models.JSONField(default=list, verbose_name='申请人或团队列表')),
                (
                    'status',
                    models.CharField(
                        choices=[('started', '申报中'), ('failed', '未获奖'), ('succeed', '已获奖')],
                        default='started',
                        max_length=32,
                        verbose_name='状态',
                    ),
                ),
                ('liaisons', models.JSONField(default=list, verbose_name='申报接口人列表')),
                ('staffs', models.JSONField(default=list, verbose_name='项目成员')),
                ('details', models.JSONField(default=dict, verbose_name='申报详情')),
                ('user_groups', models.JSONField(default=dict, verbose_name='用户组绑定')),
                ('addons', models.JSONField(blank=True, default=list, null=True, verbose_name='附件')),
            ],
            options={
                'db_table': 'award_application',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='奖项名称')),
                ('description', models.TextField(verbose_name='奖项描述')),
                ('year', models.IntegerField(default=0, verbose_name='年份')),
                (
                    'quarter',
                    models.IntegerField(choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3'), (4, 'Q4')], verbose_name='季度'),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[('pending', '未开始'), ('started', '可申报'), ('unapplicable', '不可申报'), ('expired', '已过期')],
                        default='pending',
                        max_length=32,
                        verbose_name='状态',
                    ),
                ),
                ('started_at', models.DateTimeField(verbose_name='开始时间')),
                ('ended_at', models.DateTimeField(verbose_name='截止时间')),
                ('liaisons', models.JSONField(default=list, verbose_name='联系人列表')),
                ('orgs', models.JSONField(default=list, verbose_name='关联组织 ID 列表')),
                ('user_groups', models.JSONField(default=dict, verbose_name='用户组绑定')),
                ('addons', models.JSONField(blank=True, default=list, null=True, verbose_name='附件')),
                ('award_slideshow', models.JSONField(blank=True, default=list, null=True, verbose_name='奖项轮播图')),
            ],
            options={
                'db_table': 'award_award',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=32, unique=True, verbose_name='标识')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
                ('sort', models.IntegerField(unique=True, verbose_name='排序')),
            ],
            options={
                'db_table': 'award_level',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='名称')),
                ('description', models.TextField(default='', verbose_name='描述')),
                ('liaisons', models.JSONField(default=list, verbose_name='联系人列表')),
                ('periods', models.JSONField(default=list, verbose_name='奖项周期列表')),
                ('stages', models.JSONField(default=list, verbose_name='阶段策略列表')),
                ('raw_application_info', models.JSONField(default=list, verbose_name='申报策略列表')),
                ('summary_info', models.JSONField(default=list, verbose_name='奖项策略字段列表')),
                ('global_config', models.JSONField(default=dict, verbose_name='全局配置')),
                ('scope', models.JSONField(default=list, help_text='组织 ID 列表', verbose_name='组织范围')),
                ('logo', models.URLField(blank=True, null=True, verbose_name='logo')),
                ('addons', models.JSONField(blank=True, default=list, null=True, verbose_name='附件')),
                (
                    'level',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='awards.level', verbose_name='奖项级别'
                    ),
                ),
            ],
            options={
                'db_table': 'award_policy',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                (
                    'status',
                    models.CharField(
                        choices=[('pending', '未开始'), ('started', '进行中'), ('finished', '完成'), ('aborted', '中止')],
                        default='pending',
                        max_length=32,
                        verbose_name='状态',
                    ),
                ),
                ('details', models.JSONField(default=dict, verbose_name='阶段详情')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('index', models.IntegerField(verbose_name='阶段序号')),
                (
                    'application',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='stages',
                        to='awards.application',
                        verbose_name='申请',
                    ),
                ),
            ],
            options={
                'db_table': 'award_stage',
                'ordering': ['index'],
            },
            managers=[
                ('generator', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('details', models.JSONField(blank=True, default=dict, null=True, verbose_name='奖项沉淀详细信息')),
                ('year', models.IntegerField(default=0, verbose_name='年份')),
                (
                    'status',
                    models.CharField(
                        choices=[('started', '已填写'), ('rejected', '驳回'), ('succeed', '已通过')],
                        default='started',
                        max_length=32,
                        verbose_name='状态',
                    ),
                ),
                (
                    'application',
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='summary',
                        to='awards.application',
                        verbose_name='奖项申报',
                    ),
                ),
                (
                    'award',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='summaries',
                        to='awards.award',
                        verbose_name='奖项',
                    ),
                ),
                (
                    'policy',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='summaries',
                        to='awards.policy',
                        verbose_name='奖项策略',
                    ),
                ),
            ],
            options={
                'db_table': 'award_summary',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SummaryLike',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('username', models.CharField(max_length=128, verbose_name='用户名')),
                (
                    'summary',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='likes',
                        to='awards.summary',
                        verbose_name='奖项沉淀',
                    ),
                ),
            ],
            options={
                'db_table': 'award_summary_like',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                (
                    'type',
                    models.CharField(
                        choices=[
                            ('notification', '通知'),
                            ('approval', '审批'),
                            ('summary_collection', '奖项沉淀收集'),
                            ('extra_info_collection', '额外信息收集'),
                            ('approval_time_collection', '审批时间收集'),
                        ],
                        max_length=32,
                        verbose_name='类型',
                    ),
                ),
                ('policy', models.JSONField(default=dict, verbose_name='策略')),
                ('details', models.JSONField(default=dict, verbose_name='详情')),
                (
                    'status',
                    models.CharField(
                        choices=[('pending', '未开始'), ('started', '进行中'), ('finished', '完成'), ('aborted', '中止')],
                        default='pending',
                        max_length=32,
                        verbose_name='状态',
                    ),
                ),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('index', models.IntegerField(verbose_name='步骤序号')),
                (
                    'stage',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='steps',
                        to='awards.stage',
                        verbose_name='阶段',
                    ),
                ),
            ],
            options={
                'db_table': 'award_step',
                'ordering': ['index'],
            },
            managers=[
                ('generator', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='award',
            name='policy',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='awards',
                to='awards.policy',
                verbose_name='奖项策略',
            ),
        ),
        migrations.CreateModel(
            name='AvailablePeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(db_index=True, verbose_name='开始时间')),
                ('ended_at', models.DateTimeField(db_index=True, verbose_name='结束时间')),
                ('step_index', models.IntegerField(verbose_name='步骤索引')),
                ('username', models.CharField(db_index=True, max_length=64, verbose_name='用户名')),
                (
                    'award',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='available_periods',
                        to='awards.award',
                        verbose_name='奖项',
                    ),
                ),
            ],
            options={
                'db_table': 'award_available_period',
            },
        ),
        migrations.CreateModel(
            name='ApprovalPeriod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(db_index=True, verbose_name='开始时间')),
                ('ended_at', models.DateTimeField(db_index=True, verbose_name='结束时间')),
                ('step_index', models.IntegerField(verbose_name='步骤索引')),
                (
                    'award',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='approval_periods',
                        to='awards.award',
                        verbose_name='奖项',
                    ),
                ),
            ],
            options={
                'db_table': 'award_approval_period',
            },
        ),
        migrations.AddField(
            model_name='application',
            name='award',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='applications',
                to='awards.award',
                verbose_name='奖项',
            ),
        ),
        migrations.AddField(
            model_name='application',
            name='current_step',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='applications',
                to='awards.step',
                verbose_name='当前阶段',
            ),
        ),
    ]
